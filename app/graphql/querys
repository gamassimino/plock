# how to check with GraphQL
# http://localhost:3000/graphiql

# all projects
{
  projects{
    id
    name
    repository
    startAt
    user {
      id
      name
    	lastname
    	email
    }
    team {
      id
      name
    }
    company {
      id
      name
      description
    }
  }
}

# find project by id
{
  project(id: 1){
    id
    name
    repository
    startAt
    user {
      id
      name
    	lastname
    	email
    }
    team {
      id
      name
    }
    company {
      id
      name
      description
    }
  }
}

# find al projects by owner
{
  projectsUser(id: 1){
    id
    name
    repository
    startAt
    user {
      id
      name
    	lastname
    	email
    }
    team {
      id
      name
    }
    company {
      id
      name
      description
    }
  }
}

# find al projects by company
{
  projectsCompany(id: 1){
    id
    name
    repository
    startAt
    user {
      id
      name
    	lastname
    	email
    }
    team {
      id
      name
    }
    company {
      id
      name
      description
    }
  }
}

# find al projects by team
{
  projectsTeam(id: 1){
    id
    name
    repository|
    startAt
    user {
      id
      name
    	lastname
    	email
    }
    team {
      id
      name
    }
    company {
      id
      name
      description
    }
  }
}

# find al tracks by user
{
  tracksUser(id: 1) {
    id
    name
    description
    startsAt
    endsAt
    status
    user {
      id
      name
      lastname
      email
    }
    project {
      id
      name
      repository
    }
  }
}

# find al tracks by user
{
  tracksProject(id: 1) {
    id
    name
    description
    startsAt
    endsAt
    status
    user {
      id
      name
      lastname
      email
    }
    project {
      id
      name
      repository
    }
  }
}

# Find all finished tracks by user
{
  tracksUserFinished(id: 1) {
    id
    name
    description
    startsAt
    endsAt
    status
    user {
      id
      name
      lastname
      email
    }
    project {
      id
      name
      repository
    }
  }
}

# Find all not finished tracks by user
{
  tracksUserNotFinished(id: 1) {
    id
    name
    description
    startsAt
    endsAt
    status
    user {
      id
      name
      lastname
      email
    }
    project {
      id
      name
      repository
    }
  }
}

# Find all not finished tracks by project
{
  tracksProjectFinished(id: 1) {
    id
    name
    description
    startsAt
    endsAt
    status
    user {
      id
      name
      lastname
      email
    }
    project {
      id
      name
      repository
    }
  }
}

# Find all not finished tracks by project
{
  tracksProjectNotFinished(id: 1) {
    id
    name
    description
    startsAt
    endsAt
    status
    user {
      id
      name
      lastname
      email
    }
    project {
      id
      name
      repository
    }
  }
}

# team members
{
  membersTeam(id:2){
    name
    lastname
    email
  }
}

